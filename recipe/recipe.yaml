# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
schema_version: 1

context:
  version: 7.2.2

recipe:
  name: robotframework
  version: ${{ version }}

source:
  - url: https://pypi.org/packages/source/r/robotframework/robotframework-${{ version }}.tar.gz
    sha256: 9c420f6d35e9c8cd4b75b77cc78e36407604534ec4ab0cbddf699d7c0b2fc435
    target_directory: dist
  - url: https://github.com/robotframework/robotframework/archive/v${{ version }}.tar.gz
    sha256: 4581c3a0da0c655b629aa1b56e6ff69256abdfa7ab26ae49e52c264c61f175b0
    target_directory: src

build:
  number: 0

outputs:
  - package:
      name: robotframework
    build:
      script:
        - cd dist
        - ${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check
      python:
        entry_points:
          - robot = robot.run:run_cli
          - rebot = robot.rebot:rebot_cli
          - libdoc = robot.libdoc:libdoc_cli
    requirements:
      host:
        - pip
        - python ${{ python_min }}.*
        - setuptools
      run:
        - python >=${{ python_min }}
    tests:
      - python:
          pip_check: true
          python_version: ${{ python_min }}.*
          imports:
            - robot
            - robot.api
            - robot.conf
            - robot.htmldata
            - robot.libdocpkg
            - robot.libraries
            - robot.model
            - robot.output
            - robot.output.console
            - robot.parsing
            - robot.reporting
            - robot.result
            - robot.running
            - robot.running.arguments
            - robot.running.timeouts
            - robot.utils
            - robot.variables
      - requirements:
          run:
            - python ${{ python_min }}
        script:
          - echo "*** Test Cases ***"                   >> test-${{ version }}.robot
          - echo "Hello World"                          >> test-${{ version }}.robot
          - echo "    Log   %{PKG_NAME} %{PKG_VERSION}" >> test-${{ version }}.robot
          - robot test-${{ version }}.robot
          - rebot output.xml
          - libdoc test-${{ version }}.robot test.html

  - package:
      name: _robotframework_tests
    build:
      noarch: generic
    requirements:
      run:
        - ${{ pin_subpackage('robotframework', upper_bound="x.x.x") }}
    tests:
      - files:
          source:
            - src/utest
            - src/atest
            - src/doc/schema
            - src/README.rst
        requirements:
          run:
            - docutils
            - jsonschema
            - lxml
            - pillow
            - pip
            - pygments
            - pyyaml
        script:
          - pip check
          - cd src/utest && python run.py

about:
  license: Apache-2.0
  license_file:
    - dist/LICENSE.txt
    - dist/COPYRIGHT.txt
  summary: Generic automation framework for acceptance testing and robotic process automation (RPA)
  description: >
    Robot Framework is a generic open source automation framework for acceptance testing, acceptance test driven development (ATDD), and robotic process automation (RPA). It has simple plain text syntax and it can be extended easily with libraries implemented using Python or Java.
  homepage: https://robotframework.org
  repository: https://github.com/robotframework/robotframework
  documentation: https://robotframework.org/robotframework/${{ version }}/RobotFrameworkUserGuide.html

extra:
  feedstock-name: robotframework
  recipe-maintainers:
    - abloemert
    - bollwyvl
